<?xml version="1.0" encoding="UTF-8"?>
<!--
  @author Manjut
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-2.5.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="propertyConfigure" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="location" value="classpath:migration.properties"/>
    </bean>

    <!-- ========================= DB RESOURCE DEFINITIONS ========================= -->

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	<property name="driverClassName" value="${jdbc.driverClassName}"/>
	<property name="url" value="${matrix.database.connection.databaseurl}"/>
	<property name="username" value="${matrix.database.connection.username}"/>
	<property name="password" value="${matrix.database.connection.password}"/>
    </bean>

    <!-- Transaction manager for a single JDBC DataSource -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- SqlMap setup for iBATIS Database Layer -->
    <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
	<property name="configLocation" value="/sql-map/sql-map-config.xml"/>
	<property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="migrationDAO" class="com.secant.migration.dao.impl.MigrationDAOImpl" >
	<property name="sqlMapClient" ref="sqlMapClient" />
    </bean>
    <bean id="aetDAO" class="com.secant.migration.dao.impl.AetDAOImpl">
	<property name="sqlMapClient" ref="sqlMapClient"/>
    </bean>

    <bean id="resetDAO" class="com.secant.migration.dao.impl.ResetDAOImpl">
	<property name="sqlMapClient" ref="sqlMapClient" />
    </bean>

    <!--                                                 -->
    <bean id="migrationTPExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
	<property name="corePoolSize" value="${migrator.threads.corepoolsize}" />
	<property name="maxPoolSize" value="${migrator.threads.maxpoolsize}" />
	<property name="queueCapacity" value="${migrator.threads.queueCapacity}" />
    </bean>

    <bean id="studyFetcher" class="com.secant.migration.dao.StudyFetcher">
	<constructor-arg ref="migrationDAO" />
    </bean>
    
    <bean id="CleansingService" class="com.secant.migration.service.CleansingSerivceImpl" scope="prototype">
        <constructor-arg index="0" ref="migrationDAO" />
    </bean>
    <bean id="studyMigrator" class="com.secant.migration.threads.StudyMigrator" scope="prototype">
	<constructor-arg  index="0" ref="migrationDAO" />
	<constructor-arg index="1" ref="instance" />
	<constructor-arg index="2" ref="CleansingService" />	
    </bean>

    <bean id="instance" class="com.secant.migration.beans.Instance" scope="prototype"></bean>

    <bean id="migratorThread" class="com.secant.migration.threads.MigratorThread" scope="prototype">
	<constructor-arg index="0" ref="migrationDAO" />
	<constructor-arg index="1" ref="studyFetcher" />
	<constructor-arg index="2" ref="studyMigrator" />
        <constructor-arg index="3" ref="dicomQuery" />
    </bean>

    <bean id="migrationExecutor" class="com.secant.migration.MigrationExecutor">
	<constructor-arg ref="migrationTPExecutor" />
    </bean>

    <bean id="getCleasing" class="com.secant.migration.threads.StudyCleasing" scope="prototype"></bean>

    <bean id="dicomQuery" class="com.secant.migration.dicom.DicomQuery" scope="prototype">
    </bean>
</beans>